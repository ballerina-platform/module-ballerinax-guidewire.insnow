// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/data.jsondata;
import ballerina/http;

# Represents a comprehensive view of an insurance policy, including customer details, policy specifics, associated contacts, and system references. It's designed to encapsulate all relevant information about a policy, facilitating easy access and management within the system
public type Policy record {
    PolicyMini policyMini?;
    # A general reference identifier for the policy item, usable for cross-referencing or linkage
    string ref?;
    # Hypermedia links associated with the policy item, providing navigational URLs to related resources
    @jsondata:Name {value: "_links"}
    Link[] links?;
    CustomerInfo customerInfo?;
    ProductInfo productInfo?;
};

# Encapsulates a comprehensive set of personal details for an individual, covering demographic information, contact preferences, professional background, and licensing history, facilitating tailored interactions and personalized insurance services
public type PersonInfo record {
    # The total number of years the individual has been licensed to drive, a direct measure of driving experience
    int yearsLicensed?;
    # The individual’s date of birth, in a standard format such as ISO 8601, foundational for many aspects of insurance processing and decision-making
    string birthDt?;
    # The professional title or role of the individual within their place of employment, relevant for understanding socioeconomic factors and occupational risks
    string positionTitle?;
    # Preferred time for contacting the individual, ensuring communications are made at convenient times, enhancing customer service
    string bestTimeToContact?;
    # The age at which the individual was first licensed to drive, providing insight into driving experience and proficiency
    int ageLicensed?;
    # A code indicating the marital status of the individual, which can be a factor in policy rates and coverage options
    string maritalStatusCd?;
    # Preferred method of contact (e.g., email, phone, text), allowing for personalized communication strategies
    string bestWayToContact?;
    # The individual's gender as officially recorded, relevant in contexts where gender may impact insurance analytics or product offerings
    string genderCd?;
    # A code identifying the individual’s employer, useful in policies where employment status or employer partnerships affect coverage options
    string employerCd?;
    # A code representing the highest level of education attained by the individual, which may influence insurance rates or eligibility for certain benefits
    string educationCd?;
    # Indicates the context or category of personal information provided, with 'ContactPersonal' denoting a direct, personal contact type
    string personTypeCd = "ContactPersonal";
    # A unique identifier for the person's information record, ensuring accurate tracking and updating of personal details within the system
    string id?;
    # The current age of the individual, crucial for assessing eligibility and risk factors for certain insurance products
    int age?;
    # A code that classifies the individual's occupation, providing risk assessment data and potential eligibility for occupation-based discounts
    string occupationCd?;
    # Further classification of the individual’s occupation, offering nuanced insight into professional risks and coverage needs
    string occupationClassCd?;
};

# Details the business-related aspects of a party, including financial, operational, and classification information, tailored for commercial insurance contexts
public type BusinessInfo record {
    # The total number of years the business has been operational, indicating stability and experience in its field
    string yearsInBusiness?;
    # A code indicating the type of business, such as corporation, sole proprietorship, or partnership, relevant for underwriting and policy customization
    string businessTypeCd?;
    # A code describing the nature of the business, used for classification and risk assessment purposes
    string natureBusinessCd?;
    # The number of employees working for the business, impacting liability exposures and coverage requirements
    string numberEmployees?;
    # The total amount of payroll paid annually by the business, a factor in workers' compensation and liability coverages
    string annualPayrollAmt?;
    # The total annual sales or revenue generated by the business, influencing coverage needs and premium calculations
    string annualSalesAmt?;
    # A code categorizing the business information record for internal tracking and management
    string businessInfoCd?;
    # A unique identifier for the business information record within the system, facilitating accurate reference and management
    string id?;
    # A textual description of the business's primary operations, providing context for underwriting and coverage considerations
    string natureOfBusiness?;
};

# Defines an issue related to an entity within the system, capturing details such as the type of issue, associated attributes, and descriptive messages to aid in identification and resolution
public type Issue record {
    # A descriptive message or summary of the issue, offering insight into the nature and potential impact of the problem
    string msg?;
    # A collection of references to attributes associated with the issue, providing context and details that may aid in issue analysis and resolution
    AttributeRef[] attributeRefs?;
    # The primary classification code of the issue, indicating its general category and facilitating appropriate routing and response strategies
    string typeCd?;
    # A code further categorizing the issue within its broader type, allowing for more granular classification and handling
    string subTypeCd?;
    # A unique identifier for the issue, enabling tracking and management within the system
    string id?;
};

# Provides a condensed overview of policy information, including key attributes and links for deeper exploration
public type PolicyMini record {
    # System identifier that manages or tracks the policy, indicating the source or platform of policy management
    string systemId?;
    # Indicator for the association of the policy with an external system, highlighting integrations or external dependencies
    string externalSystemInd?;
    Insured insured?;
    # Reference to the statement account related to the policy, used for financial transactions and billing
    string statementAccountRef?;
    # A collection of hypermedia links to related resources, facilitating navigation and further actions
    @jsondata:Name {value: "_links"}
    Link[] links?;
    # Version identifier for the policy information, denoting the format or structure level of the policy data
    string version?;
    # Indicates the VIP level of the policy or associated customer, used for service prioritization or benefits
    string vipLevel?;
    BasicPolicy basicPolicy?;
    # A reference to the customer associated with the policy, enabling linkage to detailed customer information
    string customerRef?;
    # Reference identifier to the account associated with this policy, linking to account-specific details
    string accountRef?;
    # Unique identifier for the policy, facilitating identification and retrieval within the system
    string id?;
    # Reference to the audit account, if applicable, providing a connection to audit-related information and actions
    string auditAccountRef?;
    # Result or status from an IVANS insurance verification process, reflecting verification outcomes
    string iVANSCheck?;
    # An array of contacts related to the policy, detailing individuals or entities associated in various capacities
    Contact[] contacts?;
};

# Comprehensive details about an address, encapsulating both the physical location attributes and metadata for validation, geocoding, and postal delivery optimization
public type Address record {
    # A cryptographic hash value generated from the address details. This hash is used to ensure the integrity of the address data and to verify that no changes have occurred since the last validation
    string verificationHash;
    # Directional indicator for the range, providing spatial orientation in rural addressing schemes
    string rangeDir?;
    # A directional suffix in an address, specifying the compass point after the street name, for geographical clarity
    string postDirectional?;
    # A legal narrative description of the property associated with the address, used in formal documentation and contracts
    string legalDesc?;
    # Specifies the primary meridian reference, important in certain legal and surveying contexts
    string primaryMeridian?;
    # The ZIP or postal code, crucial for mail sorting, delivery, and regional identification
    string postalCode?;
    # The county in which the address resides, providing an additional layer of geographic specificity
    string county?;
    # Designates a specific section within the Public Land Survey System (PLSS) or a similar land division system, providing additional precision to rural and agricultural property locations
    string section?;
    # A suffix indicating the type or category of the street or thoroughfare, such as Road, Avenue, Circle, etc., providing additional context to the street name
    string suffix?;
    # A numerical score representing the accuracy of the address verification, where higher scores indicate higher confidence levels
    string score?;
    # The block number or identifier, relevant in urban planning and real estate contexts
    string block?;
    # A unique identifier for the address within the system, used for tracking and reference
    string id;
    # Additional detail to further specify the location within complex addresses, such as unit or apartment number
    string addition?;
    # The longitude coordinate of the address, resulting from geocoding processes
    string longitude?;
    # The specific number or identifier of the unit within a larger building, essential for accurate mail delivery to multi-unit locations
    string secondaryNumber?;
    # Numeric representation of the postal barcode associated with the address, used for mail sorting and delivery
    string barcodeDigits?;
    # Indicates the precision of geocoding for the address, such as 'street' or 'postal code' level
    string geocodeLevel?;
    # The number assigned to the building or property within the street, fundamental for address identification
    string primaryNumber?;
    # The full name of the country or major administrative region for the address
    string regionCd;
    # A code indicating the type of address, such as 'ContactAddr' for a primary contact address
    string addrTypeCd = "ContactAddr";
    # Directional indicator associated with the township, aiding in the geographical orientation and precise location of properties within larger rural or unincorporated areas
    string townshipDir?;
    # A textual description of the Delivery Point Validation code, offering insights into mail delivery capabilities
    string dpvDesc?;
    # Any legal descriptors that provide further detail to the address, often used in legal contexts or when precise property identification is necessary
    string additionalLegal?;
    # A unique hash value representing the address, used for identifying and detecting changes to address data
    string addressHash?;
    # Descriptive elaboration on the DPV notes, providing context and explanations for validation outcomes
    string dpvNotesDesc?;
    # Identifies the congressional district in which the address is located, relevant for political and demographic purposes
    string congressCode?;
    # The city or town associated with the address
    string city;
    # The latitude coordinate of the address, resulting from geocoding processes
    string latitude?;
    # A suffix to the primary number, providing additional specificity, such as indicating a range of units
    string primaryNumberSuffix?;
    # A postal service designation indicating the specific route for mail delivery, comprising a type and code
    string carrierRoute?;
    # Specifies the range for rural or agricultural properties, often used in conjunction with township and section
    string range?;
    # A message summarizing the outcome of the latest address verification attempt, providing insights into any discrepancies, issues, or confirmation of address accuracy
    string verificationMsg?;
    # Indicates a specific unit or sub-location within a larger complex or building, such as 'Apt' or 'Suite'
    string secondaryDesignator?;
    # Identifies the specific lot within a subdivision or development, relevant in property identification
    string lot?;
    # The name of the street or thoroughfare, excluding numerical or directional prefixes and suffixes, essential for identifying the location within a city or region
    string streetName?;
    # Indicates the validation status of the address, particularly the accuracy of the township, section, and range components, confirming the address has been verified against official records or databases
    string validated?;
    # The code representing the state or province of the address. This may be an abbreviation or a full name, depending on local conventions and requirements
    string stateProvCd;
    # A directional prefix in an address, specifying the compass point before the street name, enhancing locational accuracy
    string preDirectional?;
    # The ISO Alpha-2 country code, standardizing country identification across international systems
    string regionISOCd;
    # Secondary address line, used for additional location information, such as building or suite number
    string addr2?;
    # The primary address line, typically containing the street number and name
    string addr1;
    # Quaternary address line, utilized in complex addressing scenarios where multiple lines are needed for clarity
    string addr4?;
    # Tertiary address line for further detail, less commonly used
    string addr3?;
    # Delivery Point Validation code, indicating the deliverability status of the address as per postal service validation
    string dpv?;
    # Narrative description of the geocode level, explaining the extent of location accuracy achieved
    string geocodeLevelDescription?;
    # A specific code assigned to the county, used for administrative and geographic classification
    string countyCode?;
    # Refers to the principal meridian used in surveying and legal descriptions within the region of the address
    string meridian?;
    # Designates a specific individual or department at the address for targeted delivery
    string attention?;
    # Additional notes from the Delivery Point Validation process, highlighting specific issues or considerations
    string dpvNotes?;
    # Indicates the Public Land Survey System (PLSS) county code, relevant in the United States for land division and legal descriptions
    string plssCounty?;
    # Identifies the township or equivalent jurisdictional division, used primarily in rural addressing to specify location within larger, often unincorporated, areas
    string township?;
};

# Defines the payment plan for a policy as adjusted following an audit, which may result in changes to payment schedules or methods based on the audited information
public type AuditPayPlan record {
    ElectronicPaymentSource electronicPaymentSource?;
    # Indicates the adjusted day of the month for payment due dates under the audited payment plan, which may have been modified from the original schedule
    string paymentDay?;
    # A code representing the specific payment plan determined as a result of the audit, which may differ from the initial payment plan based on actual policy performance or other factors
    string auditPayPlanCd?;
    # A unique identifier for the audit pay plan record, ensuring the ability to reference and apply the specific plan adjustments post-audit
    string id?;
    # References the template from which the audited payment plan was derived, indicating the base plan prior to any adjustments
    string payPlanTemplateIdRef?;
};

# Encapsulates details about an attachment, including files, metadata, and policies related to the retention and deletion of the attachment
public type Attachment record {
    # The storage path and unique filename under which the attachment is saved on the server, crucial for retrieval and management
    string filename?;
    EraseInfo eraseInfo?;
    # A user or system-provided description of the attachment, often detailing its content, purpose, or any relevant context
    string description?;
    # Optional user-entered notes or commentary about the attachment, which can include usage notes, revision information, or any other pertinent details
    string memo?;
    # An array of file identifiers that are to be combined into this single composite attachment, facilitating document management and access
    CompositeFile[] compositeFile?;
    # A unique identifier for the attachment, facilitating tracking, reference, and operations like update or deletion
    string id?;
    # An array of identifiers for other resources or entities within the system that this attachment is linked to, enhancing data connectivity and context
    LinkReference[] linkReferences?;
    # Contains details regarding the policies and processes for purging the attachment from the system, including timelines, methods, and compliance requirements
    record {} purgeInfo?;
    # Identifies the template from which the attachment was created, if any, linking it to standardized document formats or predefined content structures
    string templateId?;
    # A collection of tags associated with the attachment, serving as metadata for categorization, searchability, and organization
    Tag[] tags?;
};

# Details an individual's or entity's phone contact information, including type and preference, to support effective and preferred modes of communication
public type PhoneInfo record {
    # A code that categorizes the type of phone number (e.g., mobile, home, work), aiding in its appropriate use and prioritization
    string phoneTypeCd = "ContactPhone";
    # The actual phone number, formatted according to local or international standards, facilitating contact
    string phoneNumber?;
    # A unique identifier for the phone information record, allowing for efficient tracking and management within the system
    string id?;
    # A label or name associated with the phone number, such as 'Home' or 'Work', to identify the phone number's context or usage
    string phoneName?;
    # Indicates whether this phone number is the preferred method of contact, prioritizing it among multiple contact options
    boolean preferredInd = true;
};

# Detailed metadata and properties associated with a specific document, including access permissions, document type, and identifiers
public type Document record {
    # Hypermedia links related to the document, providing navigational paths to related data and actions available for the document
    @jsondata:Name {value: "_links"}
    Link[] links?;
    # Identifier of the user who added the document, useful for audit trails and permissions management
    string addUser?;
    # A unique identifier for the transaction that resulted in the document's creation or modification, essential for traceability
    string transactionNumber?;
    # Code representing the delivery method or status of the document, such as electronic, mailed, or pending
    string deliveryCd?;
    # A brief description or summary of the document's content or purpose, aiding in identification and categorization
    string description?;
    # Indicator of whether the current user has permissions to view the document, ensuring compliance with access control policies
    boolean canViewInd?;
    # General categorization of the document, possibly overlapping with documentTypeCd but allowing for broader classification
    string 'type?;
    # A code categorizing the document by type, such as policy, claim, or identification, for systematic organization
    string documentTypeCd?;
    # The name or title of the item or subject matter the document pertains to, offering a quick reference to the document's focus
    string itemName?;
    # A general reference field that could be used to link the document to other entities or identifiers within the system
    string ref?;
    # The name of the file as stored within the system, including file extension, facilitating file retrieval and management
    string filename?;
    # The date the document was added to the system, typically in ISO 8601 format
    string addDt?;
    # A unique number or identifier generated during the document's output or creation process, useful for tracking and reference
    string outputNumber?;
    # The title or name of the document, used as a primary identifier in listings and searches
    string name?;
    # Reference to the template used for generating the document, linking the document to its source for replication or audit purposes
    string templateIdRef?;
    # A code identifying the form associated with the document, relevant in contexts where documents are generated from standardized forms
    string formCd?;
    # Detailed description of the item or content covered by the document, providing additional context beyond the basic description
    string itemDescription?;
    # Indicator of whether the document can be deleted, based on current user permissions and document status
    boolean canDeleteInd?;
    # The time the document was added to the system, often complementing the addition date for precise tracking
    string addTm?;
};

# Represents the Queries record for the operation: getDrivers
public type GetDriversQueries record {
    # Filter by type of driver
    "Driver"|"NonDriver" typeCd?;
    # Indicates the starting offset for the API results when you want to return a specific portion of the full results
    string continuationId?;
    # For pagination -- the maximum number of results to return
    string 'limit?;
    # Includes deleted drivers/non-drivers. If true, results will include "Deleted" drivers/non-drivers. If false (or not provided), results will not include "Deleted" drivers/non-drivers
    boolean includeDeleted?;
};

# Represents the Queries record for the operation: getPolicies
public type GetPoliciesQueries record {
    # Limits policies to those recently viewed by the caller or user. If true, results will be restricted to policies recently viewed by the caller or user. If false (or not provided), results will not be restricted to policies recently viewed by the caller or user
    boolean recentlyViewed?;
    # Filters policies by provider identifier (e.g. 28)
    string providerRef?;
    # Selects policies where policy creation date is equal to or greater than the provided createdSinceDate (e.g. 2020-01-01)
    string createdSinceDate?;
    # Indicates the starting list value for the API results when you want to return a specific portion of the full results. You can use this parameter with the limit parameter. For example, if the limit on your first API call was 10 and the results populated a list on the page. To request the next page of 10 results, call the API again with continuationId=11 and limit=10
    string continuationId?;
    # Finds policies by customer id (e.g. 212)
    string customerId?;
    # Indicates how many results to return
    string 'limit?;
    # Finds policies by policyNumber (e.g. HO00000058)
    string policyNumber?;
    # Selects policies where policy expiration date is equal to or lesser than the provided expirationDateBefore (e.g. 2020-01-01)
    string expiredDateAfter?;
    # Includes prior terms.If true, results will include prior terms. If false (or not provided), results will not include prior terms
    boolean includePriorTerms?;
    # Comma-delimited list of optional fields to be included. Currently supports customer and product
    string optionalFields?;
    # Finds policies by policy status (e.g Active)
    string status?;
};

# Represents the Queries record for the operation: getSupportedCountries
public type GetSupportedCountriesQueries record {
    # Indicates the method used to sort the results by name
    "asc"|"desc" sortType = "asc";
};

# Encapsulates tax identification information for an individual or entity, including tax ID numbers, legal entity classification, and documentation status, essential for compliance and financial reporting
public type TaxInfo record {
    # A code describing the tax classification of the party, such as 'Individual', 'Corporation', or 'Partnership', impacting tax treatment and obligations
    string taxTypeCd?;
    # Indicates whether the party is exempt from tax withholding, relevant for processing payments and tax reporting
    boolean withholdingExemptInd?;
    # Indicates whether the party has received a Form 1099, used for reporting income from sources other than wages, salaries, and tips
    boolean received1099Ind?;
    # A code that specifies the type of tax identification number provided, such as SSN or FEIN, indicating the format and nature of the ID
    string taxIdTypeCd?;
    # Indicates whether a Form W-9 has been received from the party, used to request the taxpayer identification number and certification
    boolean receivedW9Ind?;
    # Specifies if the issuance of a Form 1099 is required for the party, based on the nature of payments or income received
    boolean required1099Ind?;
    # The Federal Employer Identification Number (FEIN) for the entity, used in tax filings and other legal documents as a unique identifier
    string fein?;
    # A unique identifier for the tax information record, facilitating accurate tracking and association with parties or accounts
    string id?;
    # A code indicating the legal entity type, such as corporation, partnership, or sole proprietor, relevant for tax classification and compliance
    string legalEntityCd?;
    # The Social Security Number (SSN) for individuals, serving as a primary identification number for tax and other legal purposes
    string ssn?;
};

# Reasons for the closure of a transaction
public type TransactionCloseReasons record {
    # Code indicating the reason for transaction closure
    string closeReasonCd?;
    # Label associated with the sub-reason for transaction closure
    string closeSubReasonLabel?;
    # Unique identifier for the transaction close reasons
    string id?;
    # Comment associated with transaction closure
    string closeComment?;
    # Code indicating the sub-reason for transaction closure
    string closeSubReasonCd?;
};

# Details an individual's email contact information, including type and preference status, facilitating communication and documentation processes
public type EmailInfo record {
    # The email address itself, providing a means of electronic communication
    string emailAddr?;
    # A code identifying the type of email address provided (e.g., personal, work), aiding in its appropriate use and categorization
    string emailTypeCd = "ContactEmail";
    # A unique identifier for the email information record, allowing for reference and management within the system
    string id?;
    # Indicates whether this email address is the preferred contact method for the individual, prioritizing it among multiple contact options
    boolean preferredInd = false;
};

# Encapsulates detailed information about an individual policy, including identification, related entities, and status indicators. This schema serves as a comprehensive model for policy information, integrating with both internal and external systems for full lifecycle management
public type PolicyDetails record {
    # An identifier for the policy within the internal or external systems, facilitating cross-reference
    string systemId?;
    # List of additional insured entities for workers' compensation policies, detailing parties other than the primary insured that receive coverage
    WCAdditionalInsured[] wcAdditionalInsureds?;
    # The revision identifier of the policy, used for tracking changes and ensuring data consistency
    @jsondata:Name {value: "_revision"}
    string revision?;
    # A counter indicating the number of times the policy has been updated
    int updateCount?;
    # Indicator flag signifying if the policy is synchronized with an external system
    string externalSystemInd?;
    Insured insured?;
    # Reference identifier for the account associated with billing statements for the policy
    string statementAccountRef?;
    # Hypermedia links associated with the policy item, providing navigational URLs to related resources
    @jsondata:Name {value: "_links"}
    Link[] links?;
    # A list of states in which workers' compensation coverage is included within the policy as proposed by this quote, reflecting multi-state operations and compliance
    WCCoveredState[] wcCoveredStates?;
    # Identifier of the user who last updated the policy, used for audit trails and accountability
    string updateUser?;
    # The version number of the policy, used for version control and history tracking
    string version?;
    # The timestamp of the last update made to the policy, formatted in ISO 8601
    string updateTimestamp?;
    # The VIP level assigned to the policy or policyholder, indicating priority or special handling requirements
    string vipLevel?;
    BasicPolicy basicPolicy?;
    # A reference identifier for the customer associated with the policy
    string customerRef?;
    # A reference identifier linking the policy to a specific account in the system
    string accountRef?;
    # The unique identifier of the policy within the system
    string id?;
    # Reference identifier for the account associated with any audits related to the policy
    string auditAccountRef?;
    # Status of the IVANS check for the policy, indicating connectivity and data exchange success with the IVANS network
    string iVANSCheck?;
    # A collection of contacts related to the policy, including individuals and entities with various roles
    Contact[] contacts?;
};

# Provides details about an insurance score, including the score itself, reasons for the score, and related metadata, which is used in the underwriting and risk assessment processes
public type InsuranceScore record {
    # If applicable, the insurance score that overrides the original score, typically resulting from manual review or additional information
    string overriddenInsuranceScore?;
    # A code categorizing the type of insurance score, such as credit-based or claims history, indicating the basis for the scoring
    string insuranceScoreTypeCd?;
    # The insurance score, typically a numerical value or rating, derived from various factors and used to assess the risk associated with an insured or applicant
    string insuranceScore?;
    # A code indicating the source of the insurance score, such as an external credit bureau or an internal scoring system
    string sourceCd?;
    # The current status of the insurance score, such as 'Active' or 'Reviewed', indicating its state within the underwriting process
    string statusCd?;
    # A unique identifier for the insurance score record, facilitating tracking and management within the system
    string id?;
    # A list of reasons contributing to the insurance score, providing insight into factors influencing the score
    InsuranceScoreReason[] insuranceScoreReasons?;
    # A reference to the specific source record or identifier for the insurance score, linking to detailed source information
    string sourceIdRef?;
};

# Encapsulates issues identified by the submitter during the insurance application or quote submission process, including categorization and descriptive messaging
public type SubmitterIssue record {
    # A descriptive message detailing the nature of the issue, providing insight into potential concerns or required actions
    string msg?;
    # The primary classification code for the issue, indicating its general category and aiding in prioritization and resolution strategies
    string typeCd?;
    # A code further specifying the subtype of the issue, offering additional granularity beyond the primary type for more precise categorization
    string subTypeCd?;
    # A unique identifier for the submitter issue, facilitating tracking and resolution efforts within the system
    string id?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Configurations related to client authentication
    http:BearerTokenConfig|http:CredentialsConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    http:ClientHttp1Settings http1Settings = {};
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings = {};
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 30;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with Redirection
    http:FollowRedirects followRedirects?;
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache = {};
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with cookies
    http:CookieConfig cookieConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits = {};
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Provides settings related to client socket configuration
    http:ClientSocketConfig socketConfig = {};
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
    # Enables relaxed data binding on the client side. When enabled, `nil` values are treated as optional, 
    # and absent fields are handled as `nilable` types. Enabled by default.
    boolean laxDataBinding = true;
|};

# Provides a compact overview of an insurance application, summarizing key information and linking to detailed resources for further exploration. This schema is optimized for quick access and overview purposes
public type ApplicationMini record {
    # A collection of hypermedia links to related resources, enabling easy navigation to detailed views of the application, policy information, and other associated resources
    @jsondata:Name {value: "_links"}
    Link[] links?;
    # The unique identifier assigned to the application, serving as a primary reference for tracking and management throughout the application process
    string applicationNumber?;
    BasicPolicy basicPolicy?;
    ApplicationInfo applicationInfo?;
    # A reference identifier linking the application to its associated audit account, facilitating financial tracking and audit processes
    string auditAccountRef?;
};

# Represents the Queries record for the operation: verifyAddress
public type VerifyAddressQueries record {
    # Indicates the requested format of the address after verification. Uncombined returns the street address in components. The default is Combined
    "Combined"|"Uncombined" addressType = "Combined";
};

# Defines the details of an electronic payment source, such as bank account or credit card information, used for processing payments within the system. It includes both ACH (Automated Clearing House) and credit card payment methods
public type ElectronicPaymentSource record {
    # Message providing additional details regarding credit card authorization status or any associated messages
    string creditCardAuthorizationMessage?;
    EraseInfo eraseInfo?;
    # Indicates whether the payment source is an agent's trust account, differentiating it from customer-owned accounts
    boolean agentTrustInd?;
    # The bank account number for ACH payments, essential for direct bank transfers
    string achBankAccountNumber?;
    # A date indicating when a payment reminder should be sent, aiding in timely payment collection and customer notification
    string reminderDt?;
    # An account identifier used by the payment service provider, linking the payment transaction to external payment processing systems
    string paymentServiceAccountId?;
    # Code indicating the status of credit card authorization, such as approved or declined
    string creditCardAuthorizationCd?;
    # A code identifying the type of bank account (e.g., checking, savings) used for ACH payments
    string achBankAccountTypeCd?;
    # An identifier used in MIDAS (Money Inflow/Disbursement Administration System) or similar systems for tracking financial transactions
    string midasId?;
    # Placeholder for any action related to the payment source, such as update or deletion
    string action?;
    # A unique identifier for the electronic payment source record within the system
    string id?;
    # A code indicating the type of credit card (e.g., Visa, MasterCard) used for the payment
    string creditCardTypeCd?;
    # The expiration month of the credit card
    string creditCardExpirationMonth?;
    # The name of the credit card holder as it appears on the card
    string creditCardHolderName?;
    # Message detailing any exceptions or issues encountered during the ACH payment process, useful for troubleshooting and record-keeping
    string achExceptionMsg?;
    # A code identifying the category of payment source (e.g., internal, external, third-party), useful for payment routing and management
    string sourceTypeCd?;
    # A code indicating the current status of the payment source, such as active, inactive, or under review, guiding its availability for use
    string statusCd?;
    # The name of the bank where the ACH account is held, providing necessary details for payment processing
    string achBankName?;
    # The security code associated with the credit card, typically found on the back of the card
    string creditCardSecurityCd?;
    # An identifier for the customer's payment profile, allowing for the reuse of stored payment information in a secure manner
    string customerPaymentProfileId?;
    PartyInfo partyInfo?;
    # An identifier linking the electronic payment source to a customer profile, facilitating comprehensive customer payment management
    string customerProfileId?;
    # The expiration year of the credit card
    string creditCardExpirationYr?;
    # Carrier code associated with the payment, identifying the insurance carrier in cases of payments facilitated by or through carriers
    string carrierCd?;
    # The number of the credit card used for payments, sensitive data that must be handled according to PCI compliance standards
    string creditCardNumber?;
    # A code that specifies the payment method (e.g., ACH, credit card), important for directing the payment process accordingly
    string methodCd?;
    # The name associated with the ACH account, typically the account holder's name as it appears on bank records
    string achName?;
    # The name of the payment source, providing a human-readable identifier for the payment method or account
    string sourceName?;
    # A code that categorizes the type of ACH transaction, conforming to standard entry class specifications for payment processing
    string achStandardEntryClassCd?;
    # The routing number for the bank account, a critical component for directing ACH payments to the correct financial institution
    string achRoutingNumber?;
};

# Represents an insured entity or individual within the system, encompassing both basic identification and specific insurance-related information
public type Insured record {
    # The North American Industry Classification System (NAICS) code applicable to the insured's business, used for statistical and risk assessment purposes
    string wcNAICS?;
    # A standardized name used for indexing and search purposes, often formatted to meet specific regulatory or operational requirements
    string indexName?;
    # The official website address for the insured or their business, offering an additional contact point and information source
    string websiteAddress?;
    # An identifier used by rating bureaus to classify or rate the insured, relevant in jurisdictions or lines of business where bureau ratings are applicable
    string ratingBureauID?;
    # Indicates whether the insured operates under a self-insurance model, relevant for certain types of coverage and risk management strategies
    boolean selfInsured?;
    # A risk identification number assigned by the National Council on Compensation Insurance (NCCI), relevant for workers' compensation insurance
    string wcNCCIRiskIdNumber?;
    # The total number of years the insured has been in operation, reflecting business stability and experience for underwriting and risk assessment
    int yearsInBusiness?;
    # A list of PartyInfo objects associated with the insured, detailing multiple roles, relationships, or contact points as needed
    PartyInfo[] partyInfo?;
    # The preferred method of communication or document delivery for the insured, aligning with their convenience and regulatory preferences
    string preferredDeliveryMethod?;
    # The Standard Industrial Classification (SIC) code for the insured's business, providing an industry-based risk indicator
    string wcSIC?;
    # A unique identifier assigned to the insured within the system, facilitating tracking, policy association, and risk assessment
    string id?;
    # A flag that indicates a temporary override of the insured's standard address, useful for short-term billing or communication needs
    boolean temporaryAddressOverrideInd?;
    # A code that identifies the nature of the insured entity, such as 'Individual', 'Corporation', or 'Partnership', reflecting the structure and legal status of the insured
    string entityTypeCd?;
};

# Captures comprehensive driving-related information for an individual, including licensing details, driving history, and eligibility for discounts based on driving courses and behavior
public type DriverInfo record {
    # Reference identifier for the vehicle(s) associated with the driver, linking driver information to specific vehicles covered under the policy
    string attachedVehicleRef?;
    # The start date from which defensive driving course benefits apply, reflecting eligibility for associated discounts
    string defensiveDriverEffectiveDt?;
    # Affirms the driver's qualification as a good driver, impacting insurance rates and coverage eligibility
    boolean goodDriverInd?;
    # Indicates eligibility for a good driver discount, based on a history of safe driving practices
    boolean goodDriverDiscountInd?;
    # The date the driver qualified for a discount based on scholastic achievements, relevant for young or student drivers
    string scholasticCertificationDt?;
    # The total number of years the driver has held a license, serving as an indicator of experience and driving history
    int yearsExperience?;
    # The date of the last update to the driver's MVR status, important for maintaining current and accurate risk assessments
    string mvrStatusDt?;
    # The date on which the driver completed a formal driver training program, potentially affecting policy discounts
    string driverTrainingCompletionDt?;
    # The date the driver began driving, relevant for calculating driving experience and insurance eligibility
    string driverStartDt?;
    # The date on which the driver's license was issued, foundational for legal driving status and insurance underwriting
    string licenseDt?;
    # A code indicating the current status of the driver, such as active or suspended, which may influence policy terms and pricing
    string driverStatusCd?;
    # Indicates that a Motor Vehicle Report (MVR) has been requested for the driver, a key component in risk assessment and policy pricing
    boolean mvrRequestInd?;
    # The expiration date for defensive driving course benefits, after which renewal may be required to maintain discounts
    string defensiveDriverExpirationDt?;
    # The year in which the driver was first licensed, offering a measure of driving experience and proficiency
    string yearLicensed?;
    # The official number associated with the driver's license, essential for identification and record-keeping
    string licenseNumber?;
    # A unique identifier for the driver information record, ensuring distinct management within the insurance system
    string id?;
    # The date the driver completed an accredited accident prevention course, potentially qualifying for insurance discounts
    string accidentPreventionCourseCompletionDt?;
    # The status of the driver's MVR, providing insights into driving history, violations, and overall risk profile
    string mvrStatus?;
    # Specifies whether the driver holds a permanent driving license, as opposed to a provisional or temporary license
    boolean permanentLicenseInd?;
    # The number of vehicles officially assigned to the driver within the policy, indicating responsibility and primary usage
    int assignedVehicle?;
    # The total number of years the individual has been driving, crucial for evaluating driving experience and risk
    int lengthTimeDriving?;
    # A code categorizing the type of driver information record, useful for system processing and classification
    string driverInfoCd?;
    # Indicates completion of a formal driver training program, qualifying the driver for potential insurance benefits
    boolean driverTrainingInd?;
    # Specifies whether the driver is excluded from certain coverages within the policy, based on risk assessments or other factors
    string excludeDriverInd?;
    # Indicates whether the driver is required to provide proof of insurance, typically for legal or regulatory compliance
    boolean requiredProofOfInsuranceInd?;
    # The code for the state or province that issued the driver's license, indicating jurisdiction and legal authority
    string licensedStateProvCd?;
    # Indicates eligibility for a discount based on scholastic performance, encouraging responsible behavior among student drivers
    boolean scholasticDiscountInd?;
    # Comments related to the driver's status, providing additional context or explanations for status assignments or changes
    string statusComments?;
    # The current status of the driver's license, such as valid, suspended, or expired, directly affecting insurance eligibility
    string licenseStatus?;
    # Indicates recognition of the driver as a mature driver, possibly affecting insurance premiums and coverage options
    boolean matureDriverInd?;
    # Indicates whether the driver has successfully completed an accident prevention course
    boolean accidentPreventionCourseInd?;
    # Categorizes the driver by type, such as 'Primary' or 'Occasional', affecting policy coverage and premiums
    string driverTypeCd?;
    # Describes the driver's relationship to the insured entity or individual, such as family member or employee, impacting coverage details
    string relationshipToInsuredCd?;
    # The date the driver was hired for employment, applicable when driving is a part of professional duties
    string dateofHire?;
    # A list of points accrued by the driver for traffic violations or other infractions, impacting risk assessment and premium calculation
    DriverPoint[] driverPoints?;
    # Indicates whether the driver has completed a defensive driving course, affecting insurance premiums and coverage options
    boolean defensiveDriverInd?;
};

# Encapsulates a response that includes a list of insurance applications, potentially spanning multiple pages, along with pagination control via a continuation identifier
public type ListApplication record {
    # A pagination control identifier that specifies the starting point for the next set of results, used when additional results are available beyond the current response
    string continuationId?;
    # An array of Application objects, each representing an individual insurance application with summary and detailed data
    Application[] applicationListItems?;
};

# Details specific workers' compensation coverage options and conditions for a given state, including discounts, deductibles, experience modifications, and other factors influencing the policy's terms and premium calculations
public type WCCoveredState record {
    # Indicates whether Employers' Liability Voluntary Compensation is included, extending coverage beyond statutory workers' compensation requirements
    boolean eLVoluntaryCompensationInd?;
    # Indicates the presence of a coinsurance arrangement for the covered state, impacting the distribution of risk between insurer and insured
    boolean coinsuranceInd?;
    # The amount of deductible applied to the policy for the covered state, influencing out-of-pocket costs before insurance coverage begins
    string deductibleAmt?;
    # Specifies the type of deductible, such as 'per claim' or 'aggregate', defining how the deductible applies within the policy terms
    string deductibleType?;
    # The unemployment insurance number for the insured within the covered state, relevant for businesses and compliance reporting
    string unemploymentNumber?;
    # Indicates the status of regulatory or internal rules applied to the coverage, such as 'active', 'pending', or 'expired'
    string ruleStatus?;
    # The total premium calculated based on manual rates before application of experience modifications or other adjustments
    string totalManualPremiumAmt?;
    # The number of weeks covered under a workfare program, applicable for policies including workfare participants
    string workfareProgramWeeksNum?;
    # Indicates the application of a credit for participation in managed care programs, reflecting cost savings from efficient care management
    boolean managedCareCreditInd?;
    # Reference to the product version associated with this coverage, linking state-specific terms to overall policy structure and offerings
    string productVersionIdRef?;
    # Indicates whether the Alternate Risk Distribution (ARD) rule is enabled for this state, affecting risk assessment and premium distribution
    boolean aRDRuleEnabled?;
    # The portion of the premium subject to adjustments and modifications, based on covered payroll, classification rates, and experience factors
    string totalSubjectPremiumAmt?;
    # Details about any work-study programs affecting coverage or premium calculations, relevant for educational institutions or employers
    string workStudyProgram?;
    # A unique identifier for the workers' compensation coverage record within the specified state
    string id?;
    # The total premium amount after applying discounts, reflecting cost adjustments based on risk management practices or other criteria
    string totalDiscountedPremiumAmt?;
    # Indicates whether a flat waiver of subrogation applies, limiting the insurer's right to recover from third parties causing loss
    boolean waiverOfSubrogationFlatInd?;
    # An estimate of the total premium for the covered state, considering specific state rates, classifications, and coverage requirements
    string totalStateEstimatedPremium?;
    # A factor reflecting the insured's historical claims experience relative to the industry average, affecting premium calculations
    string experienceModificationFactor?;
    # Scheduled premium modification for General Liability, affecting the overall premium calculation based on specific risk adjustments
    string gLScheduledPremiumMod?;
    # Specifies the order in which this state's coverage details are presented or processed, indicating sequencing within multi-state policies
    int 'order?;
    # The amount charged for noncompliance with specified conditions or requirements, serving as a penalty or incentive for adherence to policy terms
    string noncomplianceChargeAmt?;
    # The number of contracts under which a waiver of subrogation applies, affecting the rights of the insurer to pursue recovery from third parties
    string noOfContractsForWaiverOfSubrogation?;
    # A factor applied in cases of large deductibles, influencing the premium calculation by accounting for the increased self-assumed risk
    string largeDeductibleFactor?;
    # A numerical index used for ordering or categorization within the system, facilitating data organization and retrieval
    int index?;
    # The number of claims filed under the policy for the covered state, providing a measure of risk and loss history
    string numberOfClaims?;
    # The effective date of the rating and pricing structure applied to the covered state, marking the beginning of the applicable terms
    string ratingEffectiveDt?;
    # The standard premium amount prior to any discounts or modifications, serving as a baseline for subsequent premium calculations
    string totalStandardPremiumAmt?;
    # The percentage credit applied for participation in certified safety and health programs, encouraging workplace safety initiatives
    string certifiedSafetyHealthProgPct?;
    # Indicates whether package factors, combining multiple coverages or policies, are applied in premium calculations for the state
    boolean packageFactorInd?;
    # Indicates eligibility for a credit based on participation in alcohol and drug-free workplace programs
    boolean alcoholDrugFreeCreditInd?;
    # A code representing the insured's experience rating, categorizing the risk level based on past claims history
    string experienceRatingCd?;
    # The code representing the state for which the coverage details apply, identifying the jurisdiction covered by the policy terms
    string stateCd?;
    # Status of the experience modification, such as 'applied' or 'pending', indicating the current application of the experience factor
    string experienceModificationStatus?;
    # The percentage credit applied based on adjustments to the contractor classification premium, reflecting specific risk profiles and experience
    string contrClassPremAdjCreditPct?;
    # Designates the state as the primary state of coverage, relevant for policies covering multiple jurisdictions
    boolean primaryInd?;
    # The current status of the coverage for the specified state, indicating active, inactive, or pending states of the coverage terms
    string status?;
};

# Represents the details of a composite file, which is typically created by combining multiple files or parts of files into a single file attachment. This schema facilitates the management and assembly of such files
public type CompositeFile record {
    # Specifies the storage path and the unique filename under which the component file is saved on the server. These files are intended to be combined to form a composite attachment
    string fileName?;
    # A unique identifier for the composite file component, allowing for precise reference and manipulation within the system
    string id?;
};

# Contains details regarding the erasure of data, including who performed the erasure, when it was done, and the specific item erased, ensuring compliance with data protection and privacy regulations
public type EraseInfo record {
    # The specific time at which the data was erased, complementing the date information for precise record-keeping
    string erasedTm?;
    # Identifier of the user or system process that performed the erasure, providing an audit trail for compliance and review
    string erasedBy?;
    # The date on which the data was erased, recorded in a standard format such as ISO 8601 for consistency and clarity
    string erasedDt?;
    # A unique identifier for the erase information record, facilitating tracking and management of erasure actions within the system
    string id?;
    # A boolean indicator that confirms whether the data has been successfully erased, providing a clear status update
    boolean erasedInd?;
};

# Represents a detailed record of a note, capturing contextual comments, priority, and administrative metadata, aiding in communication and documentation processes
public type Note record {
    # A reference identifier linking the note to related records or entities, enhancing data connectivity and retrieval
    string ref?;
    # Additional comments associated with the note, offering further clarification, instructions, or context
    string comments?;
    # The date when the note was initially added to the system, providing a temporal context for the information
    string addDt?;
    # A code indicating the note's priority, such as 'High', 'Medium', or 'Low', affecting its visibility and urgency
    string priorityCd?;
    # The identifier of the user who created the note, linking the note to its author for reference or follow-up
    string addUser?;
    # A boolean indicator specifying whether the note is marked as 'sticky' or particularly important, ensuring prominence in listings or displays
    boolean stickyInd?;
    # A brief description or summary of the note's content, providing an at-a-glance understanding of its purpose or subject matter
    string description?;
    # A detailed memorandum contained within the note, elaborating on the topic, decision-making process, or action items
    string memo?;
    # An identifier for a note template that was used as a basis for this note, standardizing the format and content for specific types of annotations
    string templateId?;
    # The precise time of day when the note was added, complementing the date for accurate chronological tracking
    string addTm?;
    # The current status of the note, such as 'Active', 'Completed', or 'Cancelled', reflecting its relevance and actionability
    string status?;
};

# Encapsulates a response structure for API calls that return multiple documents, facilitating easy access to and manipulation of a collection of documents within the system
public type ListDocument record {
    # An array of Document objects, each representing detailed information about a specific document within the system
    Document[] documentListItems?;
};

# Contains detailed information about a single country, including its ISO code and the full country name. This schema is crucial for ensuring accurate country representation and selection across the application
public type Country record {
    # The official name of the country as recognized internationally. This name is used for display purposes and in user interfaces
    string name?;
    # The ISO 3166-1 alpha-2 code of the country, providing a two-letter code that is universally recognized for representing country names
    string isoCd?;
};

# Provides an in-depth view of a note, including its content, priority, and associated metadata, facilitating detailed documentation and tracking within the system
public type NoteDetail record {
    EraseInfo eraseInfo?;
    # A code indicating the note's priority level, such as 'High', 'Medium', or 'Low', guiding attention and response urgency
    string priorityCd?;
    # Specifies whether the note is marked as 'sticky' or important, warranting prominent display or special attention
    boolean stickyInd?;
    # A brief overview or summary of the note's content, providing insight into its purpose and significance
    string description?;
    # An extended memo or detailed commentary associated with the note, providing additional context, explanations, or action items
    string memo?;
    # A unique identifier assigned to the note, enabling distinct tracking and retrieval within the system
    string id?;
    # A collection of references linking the note to other related records or documents, enhancing contextual understanding and data integration
    LinkReference[] linkReferences?;
    # Details regarding the conditions and policies for purging the note from the system, ensuring data management compliance
    record {} purgeInfo?;
    # Identifier for the template used in creating the note, standardizing format and content for specific types of notes
    string templateId?;
    # Indicates whether the note should be visible across all producer containers, ensuring broad visibility when necessary
    boolean showOnAllProducerContainersInd?;
    # A set of tags categorizing or highlighting aspects of the note, facilitating organization and thematic grouping
    Tag[] tags?;
};

# Provides a paginated structure for listing policies, facilitating the retrieval of policy information in a segmented manner. This schema supports operations that require the listing of multiple policies, including search results and batch processing views
public type ListPolicy record {
    # If more results are available, the ContinuationId should be the row index of the next row
    string continuationId?;
    # An array of policy items, each containing detailed information about individual policies
    Policy[] policyListItems?;
};

# Captures essential identification and reference information for a customer, supporting customer management, service, and correspondence within the insurance system
public type CustomerInfo record {
    # A reference string or identifier that links the customer to external systems, records, or databases, enhancing interoperability and data cohesion
    string customerRef?;
    # The full name of the customer as registered or recognized within the system, facilitating personalization, correspondence, and customer engagement
    string name?;
    # The system-generated unique identifier for the customer's record, ensuring the ability to uniquely identify, track, and manage customer information within the system
    string id?;
    # A unique identifier or number assigned to the customer, serving as a primary reference for account management, policy administration, and customer service activities
    string customerNumber?;
};

# Detailed representation of an insurance application, including its status, ownership, associated customer and product information, and permissions regarding user actions
public type Application record {
    ApplicationMini applicationMini?;
    # A unique reference identifier for the application, used within the system for tracking, management, and retrieval purposes
    string ref?;
    # Hypermedia links related to the application, facilitating navigation to related resources and actions such as editing or inquiry
    @jsondata:Name {value: "_links"}
    Link[] links?;
    # Indicates whether the current user is permitted to make inquiries regarding the application, typically used for customer service and support roles
    boolean canInquiry?;
    # Indicates whether the current user has permissions to edit the application, reflecting access control based on user roles and application status
    boolean canEdit?;
    # Identifies the current owner or responsible party for the application, which may be an individual agent or a team within the insurance organization
    string currentOwner?;
    CustomerInfo customerInfo?;
    ProductInfo productInfo?;
};

# Represents a hypermedia link, providing navigational capabilities between related resources within the API, akin to links in web pages
public type Link record {
    # A descriptor that indicates the relationship of the linked resource to the current context, such as 'self', 'next', or specific action-related terms
    string rel?;
    # The absolute or relative URL pointing to the linked resource, which can be used to directly access or query the target resource
    string href?;
};

# Encapsulates a reference to a specific attribute within the system, linking issues or other entities to detailed attribute information for clarity and context
public type AttributeRef record {
    # The unique identifier of the attribute to which this reference points, establishing a direct link for data retrieval and analysis
    string attributeId?;
    # A unique identifier for the attribute reference itself, ensuring the ability to track and manage these references independently within the system
    string id?;
};

# Encapsulates a detailed record of an insurance application's lifecycle within the system, tracking its creation, updates, mailing history, closure, and any related correction or reinstatement transactions
public type ApplicationInfo record {
    # The identifier (e.g., username) of the user who added the application, providing an audit trail for creation actions
    string addUser?;
    # Indicates if the application is currently on hold, pending release for further processing or decision-making
    boolean pendForReleaseInd?;
    # The date when the application was officially closed, terminating its active processing or consideration within the system
    string closeDt?;
    # A more specific code that provides additional detail on the reason for application closure, used for finer categorization
    string closeSubReasonCd?;
    # For renewal applications, this field links to the transaction number of the previous application or policy being renewed
    int renewalApplyOfTransactionNumber?;
    # A reference to the master quote associated with this application, linking application data to quoting details
    string masterQuoteRef?;
    # The date when the application was initially added to the system, marking the start of its lifecycle
    string addDt?;
    # A code that categorizes the reason for the application's closure, such as 'withdrawn' or 'issued'
    string closeReasonCd?;
    # A unique identifier for the application information record, ensuring distinct and retrievable records within the system
    string id?;
    # The identifier of the user who performed the closure action, contributing to the audit trail
    string closeUser?;
    # Flags whether the application is marked for renewal, indicating an ongoing relationship or coverage continuation
    boolean renewalApplyInd?;
    # The most recent date on which the application or related documents were mailed out, indicating the latest communication attempt
    string lastMailedDt?;
    # For applications that are reinstatements, this is the original transaction number of the application that is being reinstated
    int reinstatementOfTransactionNumber?;
    # The textual description corresponding to the close sub-reason code, offering human-readable insight into the closure reason
    string closeSubReasonLabel?;
    # If the application was corrected by a subsequent transaction, this is the number of that correcting transaction
    int correctedByTransactionNumber?;
    # The identifier of the user who made the most recent update to the application, part of the comprehensive audit trail
    string updateUser?;
    # A description or identifier for the particular iteration or version of the application, useful in tracking changes over time
    string iterationDescription?;
    # If this application serves as a correction, this is the original transaction number that it corrects
    int correctionOfTransactionNumber?;
    # Identifies the transaction number that led to the reinstatement of this application, if it was previously closed or withdrawn
    int reinstatedByTransactionNumber?;
    # The date by which the application processing needs to be completed, often tied to coverage start dates or customer requirements
    string needByDt?;
    # The date of the last update made to the application, reflecting the most recent changes or progress
    string updateDt?;
    # The exact time of day when the application was closed, providing precise timing alongside the closure date
    string closeTm?;
    # The time at which the last update to the application was made, providing time-specific tracking of modifications
    string updateTm?;
    # The date when the application or associated documents were first mailed to the customer or relevant party
    string firstMailedDt?;
    # The date when the application was formally submitted for review or processing, moving it forward in the underwriting or issuance pipeline
    string submittedDt?;
    # Any comments or notes regarding the reasons or circumstances surrounding the application's closure
    string closeComment?;
    # The precise time of day when the application was added to the system, complementing the add date for accurate tracking
    string addTm?;
};

# Encapsulates responses to a set of predefined questions, typically used in underwriting or claim processes, to gather necessary information in a structured format
public type QuestionReplies record {
    # Metadata or identifier indicating the source or context of the questions, such as a specific underwriting guideline or claim process step
    string questionSourceMDA?;
    # A unique identifier for the collection of question and replies, facilitating organization and retrieval
    string id?;
    # An array of responses to specific questions, each containing the question's details and the provided reply, structured according to the QuestionReply schema
    QuestionReply[] questionReply?;
};

# Detailed representation of a driver or potential driver, encompassing personal information, contact details, associated addresses, and other relevant information that pertains to their role and status within insurance policies
public type Driver record {
    # An array of Address objects that detail the driver's associated addresses, including home, mailing, and potentially other types of addresses
    Address[] addresses?;
    # A versioning identifier used to manage concurrent updates to the driver resource, ensuring data integrity through optimistic locking mechanisms
    @jsondata:Name {value: "_revision"}
    string revision?;
    # A collection of hypermedia links related to the driver, providing quick access to related resources and actions such as fetching detailed information or initiating workflows
    @jsondata:Name {value: "_links"}
    Link[] links?;
    EraseInfo eraseInfo?;
    NameInfo nameInfo?;
    # A categorization field that identifies the nature of the party's relationship to the policy or entity, with 'ContactParty' denoting direct contact or relation
    string partyTypeCd = "ContactParty";
    # A list of issues or points of concern related to the driver, such as incidents or violations, that may affect insurance considerations
    Issue[] issues?;
    PersonInfo personInfo?;
    # A reference to the geographical location or area associated with the driver, potentially relevant for policies with geographical considerations such as Personal Umbrella policies
    string locationIdRef?;
    DriverPersonalInfo driverInfo?;
    # Represents the number of years the driver has been associated with the insurance provider or specific policy, possibly impacting considerations such as loyalty discounts or risk assessments
    int yearsOfService?;
    EmailInfo emailInfo?;
    # An array detailing the phone contact information associated with the driver, facilitating various forms of communication
    PhoneInfo[] phoneInfo?;
    # A code indicating the anticipated future status of the driver with respect to the policy, such as pending renewal or cancellation
    string futureStatusCd?;
    # A unique identifier for the driver, used to reference and manage driver information within the system
    string id?;
    QuestionReplies questionReplies?;
    # A reference to the specific insurance policy ID that this driver is associated with, highlighting the connection to policy structures and coverages
    string underLyingPolicyIdRef?;
    # References detailed party information, linking the driver to additional contextual data or policy-related entities
    string underLyingPartyInfoIdRef?;
    # Current status of the driver, indicating their active involvement or any flags such as 'Deleted' for removed records
    string status?;
};

# A structured response payload containing an array of addresses. This schema facilitates the return of multiple address records in a single API response, typically used in search or list endpoints where multiple addresses need to be communicated
public type ListAddress record {
    # An array of Address objects, each representing detailed information about a specific address. The structure of each Address object is defined by the Address schema
    Address[] addresses?;
};

# Defines the structure for transaction text within the system, including its ID, textual content, associated code, and transaction text type
public type TransactionText record {
    # Code indicating the type of transaction text
    string transactionTextTypeCd?;
    # Code associated with the text
    string textCd?;
    # Unique identifier for the transaction text
    string id?;
    # Text associated with the transaction
    string text?;
};

# Defines the attributes of a state or province, providing key identifiers and names for use in addressing and location services within the insurance application
public type StateProvinces record {
    # The unique identifier or code for the state or province, often used as a standard abbreviation or code in address formats
    string id?;
    # The full name of the state or province, providing a clear and unambiguous reference for users and systems interacting with address information
    string stateProvName?;
};

# Encapsulates a reference to a linked resource within the system, providing context and navigational properties to enhance connectivity between different entities or data models
public type LinkReference record {
    # The name of the model or entity type that is being linked to, providing clarity on the kind of resource the link references
    string modelName?;
    # The system-wide unique database identifier for the target item of this link reference, used in scenarios where objects from different containers or databases are interconnected
    string systemIdRef?;
    # Descriptive text for the link, typically generated based on templates, that explains the nature or purpose of the link in user-readable terms
    string description?;
    # A unique identifier for the link reference, facilitating tracking and management of links within the application
    string id?;
    # The reference ID of the target model to which this link points, establishing a clear connection between the link and its associated entity
    string idRef?;
    # Indicates the current status of the link, such as 'Active' or 'Deleted', reflecting the link's operational state within the system
    string status?;
};

# Captures detailed information related to a specific transaction within the policy lifecycle, including cancellations, corrections, payments, and policy term adjustments, among others
public type TransactionInfo record {
    # The amount of payment made or processed in this transaction, relevant for transactions involving financial exchanges
    string paymentAmt?;
    # A brief summary of the transaction, useful for quick reference and overview in listings or summaries
    string transactionShortDescription?;
    # The effective date of the transaction, indicating when the changes or actions associated with the transaction take effect
    string transactionEffectiveDt?;
    # The expiration date of the policy resulting from this transaction, indicating the end of the current policy term
    string newPolicyExpirationDt?;
    # Code that identifies the source of the transaction, such as an online portal, agent submission, or system-generated adjustment
    string sourceCd?;
    # The effective date of the policy resulting from this transaction, marking the start of the new or adjusted policy term
    string newPolicyEffectiveDt?;
    # Transaction number of a renewal application associated with this transaction, indicating continuity in the policy lifecycle
    int renewalApplyOfTransactionNumber?;
    # Transaction number of a previous transaction that this transaction cancels or nullifies
    int cancelOfTransactionNumber?;
    # A list of output suppression settings to be reapplied as a result of this transaction, affecting document generation and communication preferences
    ReapplyOutputSuppression[] reapplyOutputSuppressions?;
    # The precise time at which the transaction becomes effective, providing additional specificity beyond the effective date
    string transactionEffectiveTm?;
    # The reason provided for releasing any holds associated with this transaction, facilitating administrative processing and documentation
    string releaseHoldReason?;
    # Code categorizing the type of cancellation, aiding in the processing and reporting of cancellations
    string cancelTypeCd?;
    # Specifies the type of hold placed on a transaction, impacting how the transaction is processed and when it becomes effective
    string holdType?;
    # A unique identifier for the transaction information record, ensuring distinct management and tracking within the system
    string id?;
    # Code identifying the sub-producer or agent responsible for the renewal, part of the distribution and sales tracking
    string renewalSubProducerCd?;
    # Indicator of whether a reinstatement fee is charged for this transaction, typically associated with policy reinstatements
    boolean chargeReinstatementFeeInd?;
    # For workers' compensation policies, a code that indicates the conditions or reasons for reinstatement following cancellation or lapse
    string wcReinstatementCd?;
    # The number of the check used for payment in this transaction, applicable for transactions involving check payments
    string checkNumber?;
    # Transaction number of a previous transaction that this one reinstates, creating a connection within the reinstatement process
    int reinstatementOfTransactionNumber?;
    # Transaction number of a subsequent transaction that corrects this one, facilitating tracking of corrections through transaction chains
    int correctedByTransactionNumber?;
    # A system-assigned sequential number for the transaction, serving as a unique identifier within the policy's transaction history
    int transactionNumber?;
    # A code categorizing the transaction type, facilitating processing, reporting, and historical tracking of policy transactions
    string transactionCd?;
    # Indicates whether the audit requirement at cancellation has been waived for a workers' compensation policy, affecting end-of-term processing
    boolean wcWaiveCancellationAuditInd?;
    # Code that identifies the type of output or document generation triggered by this transaction, such as policy declarations or billing statements
    string outputTypeCd?;
    # Code that classifies the type of payment made, such as premium payment, reinstatement fee, or other transaction-related payment
    string paymentTypeCd?;
    # Reference identifier for the renewal provider or system associated with this transaction, linking to external systems managing renewals
    string renewalProviderRef?;
    # Transaction number of a previous transaction that this one corrects, establishing a correction relationship within the transaction history
    int correctionOfTransactionNumber?;
    # Transaction number of a subsequent transaction that reinstates this one, linking transactions within the context of policy reinstatements
    int reinstatedByTransactionNumber?;
    # A detailed description of the transaction, offering insights into its purpose, scope, and impact on the policy or customer
    string transactionLongDescription?;
    ElectronicPaymentSource electronicPaymentSource?;
    # Code identifying who requested the cancellation, providing insight into the source of the transaction
    string cancelRequestedByCd?;
    # In workers' compensation policies, the total premium amount for manually rated locations, reflecting specific risk assessments
    string wcTotalNetLocationsManualPremiumAmt?;
    # Specifies the product version to which the policy is being rewritten as a result of this transaction, indicating product updates or changes
    string rewriteToProductVersion?;
    # Transaction number of a subsequent transaction that cancels this one, indicating a linkage between transactions within the policy history
    int cancelledByTransactionNumber?;
    # Indicator that the generation of an invoice for this transaction should be delayed, according to specific processing rules or conditions
    boolean delayInvoiceInd?;
};

# Contains information related to electronic signatures, including the type of signature, recipient category, and signing methodology, facilitating digital document execution and verification
public type ESignatureInfo record {
    # Describes the method by which the electronic signature is captured or verified, providing details on the procedural aspects of the signing process
    string signingType?;
    # A code that identifies the type of electronic signature process or technology used, such as digital signatures or clickwrap agreements
    string eSignatureTypeCd?;
    # A code categorizing the recipient of the document requiring an electronic signature, such as 'Insured', 'Agent', or 'Third Party'
    string recipientCd?;
    # A unique identifier for the electronic signature information record, enabling distinct management and tracking within the system
    string id?;
};

# Encapsulates a paginated response structure that contains a list of drivers, including relevant metadata to handle continuation of listing if more drivers exist beyond the current response set
public type ListDriver record {
    # A unique identifier that can be used to request subsequent pages of drivers. This value represents the row index from which the next set of results should start, facilitating pagination in client applications
    string continuationId?;
    Driver drivers?;
};

# Encapsulates a response that includes a list of notes associated with a specific entity, such as a policy or claim, providing a structured overview of textual annotations or reminders
public type ListNote record {
    # An array of Note objects, each representing an individual note with details such as content, priority, and status
    Note[] noteListItems?;
};

# Summarizes foundational information about a policy, including its identification, associated affinity group, and details about its payment plan
public type BasicPolicy record {
    # The effective date of the policy, indicating when coverage begins
    string effectiveDt?;
    # The code identifying the payment plan associated with the policy, dictating the schedule and method of premium payments
    string payPlanCd?;
    # The code indicating the source of business, such as direct, broker, or agent
    string businessSourceCd?;
    # The branch or division of the insurance provider issuing the policy
    string branch?;
    # Indicator of whether employment practices liability coverage is selected
    boolean employmentAndPracticeLineSelectedInd?;
    # The code representing the term for the policy renewal, dictating the duration and conditions for the renewed coverage period
    string renewalTermCd?;
    # The code of the state that has jurisdiction over the policy, particularly important for multi-state operations
    string controllingStateCd?;
    # A reference to the version ID of the insurance product, ensuring that the policy aligns with the correct product specifications and terms
    string productVersionIdRef?;
    # The effective time of the policy, providing precise coverage start time
    string effectiveTm?;
    # Indicator of whether Errors and Omissions (E&O) coverage is selected
    boolean errorsAndOmissionLineSelectedInd?;
    # The code identifying the sub-producer or agent responsible for the policy, part of the distribution and sales network
    string subProducerCd?;
    # Specifies the day of the month on which recurring payments are due for the policy
    string paymentDay?;
    # A URL or identifier linking to the session or transaction where the policy was created or modified, for audit and tracking purposes
    string sessionLink?;
    # A legacy sub-type code for the policy, maintained for historical or compatibility purposes
    string oldSubTypeCd?;
    # Indicator of whether the policy includes coverage for vandalism and malicious mischief, protecting against specific types of property damage
    boolean vandalismMaliciousMischiefInd?;
    # Indicator of whether data prefilling is enabled for automatic data capture and form completion
    boolean autoDataPrefillInd?;
    # Indicator of whether general liability coverage is selected
    boolean gLLineSelectedInd?;
    # The unique identifier for the policy within the system
    string id?;
    # Subline code for commercial coverage, providing additional detail on the specific nature of the coverage
    string cCSubline?;
    # Indicator of whether personal lines coverage is selected, identifying if the policy includes insurance products designed for individuals and families, such as personal auto, homeowners, or personal umbrella coverage
    boolean pLLineSelectedInd?;
    # A description of the policy designed for display purposes, often used in customer-facing documents
    string displayDescription?;
    # The code representing the specific insurance product type, facilitating product management and policy administration
    string productTypeCd?;
    # The policy number of the policyholder's previous insurance policy, used for reference and transferring information
    string previousPolicyNumber?;
    # The inception time of the policy, providing precise start time of coverage
    string inceptionTm?;
    # Identifies the origin of the policy, such as an online application, agent submission, or broker referral
    string policySource?;
    # A reference identifier for the provider managing the renewal of the policy, which may differ from the original issuing provider
    string renewalProviderRef?;
    # Indicator of whether commercial lines coverage is selected, encompassing a range of commercial policies
    boolean cLLineSelectedInd?;
    # Indicator of whether Directors and Officers (D&O) liability coverage is selected
    boolean directorsAndOfficersLineSelectedInd?;
    # The code representing the insurance carrier providing the policy
    string carrierCd?;
    # The type of commercial property policy, detailing the specific coverage options selected
    string cCPolicyType?;
    # The code for the type of premium discount table applied to the workers' compensation policy, affecting discounts for larger premium volumes
    string wcPremiumDiscountTableTypeCd?;
    # Indicator of whether commercial property coverage is selected
    boolean cCLineSelectedInd?;
    # Detailed information on the previous transactions in this policy
    TransactionDetails[] transactionHistory?;
    # The type of commercial package policy, detailing the specific coverage options selected
    string cPPolicyType?;
    # Indicator of whether the policy is manually renewed, as opposed to automatically renewed
    boolean manualRenewalInd?;
    # The code identifying the insurance program under which the policy is issued, often related to specialized markets or groupings of policies
    string programCd?;
    # The day on which the workers' compensation policy's rating and premium are reassessed annually, important for policy management and pricing
    string wcAnniversaryRatingDay?;
    # Indicator of whether the policy includes extended coverage beyond standard terms
    boolean extendedCoverageInd?;
    # The expiration date of the policyholder's previous insurance policy, important for underwriting and continuity of coverage considerations
    string previousExpirationDt?;
    # The premium amount paid for the previous policy period, used for underwriting and pricing analysis
    string previousPremium?;
    # Indicator of whether a commercial CLUE (Comprehensive Loss Underwriting Exchange) report has been requested for underwriting purposes
    boolean commCLUERequestInd?;
    # A brief description of the policy, summarizing the key coverage and policy details
    string description?;
    # Indicator of whether the workers' compensation Average Rate Differential (ARD) rule is enabled, affecting premium calculations
    boolean wcARDRuleEnabled?;
    # The code representing the group of insurance carriers, if applicable, under which the policy is issued
    string carrierGroupCd?;
    UmbrellaPolicyInfo umbrellaPolicyInfo?;
    # Indicator of whether commercial auto line coverage is selected in the policy
    boolean cALineSelectedInd?;
    # Indicator of whether the policy includes coverage for named non-owned vehicles or properties
    boolean namedNonOwnedInd?;
    # Indicator of whether dwelling property coverage is selected
    boolean dPLineSelectedInd?;
    # The code of the insurance carrier that issued the previous policy, used for history tracking and risk assessment
    string previousCarrierCd?;
    # The code for the sub-producer responsible for the renewal of the policy, part of the distribution channel management
    string renewalSubProducerCd?;
    # Indicator of whether the policy includes coverage for fire and lightning damage
    boolean fireLightningInd?;
    # The inception date of the policy, marking the beginning of coverage, distinct from the effective date in some cases
    string inceptionDt?;
    # The reason for manually renewing the policy, providing context for the renewal decision
    string manualRenewalReason?;
    # Indicator of whether commercial inland marine coverage is selected
    boolean cILineSelectedInd?;
    # Free-form comments or notes associated with the policy
    string comments?;
    # The code representing the affinity group associated with the policy, which may qualify the policyholder for certain benefits or discounts
    string affinityGroupCd?;
    # A more specific classification within the overall policy type, providing further detail on the coverage or policy structure
    string subTypeCd?;
    # Indicates the current status of the policy transaction, such as pending, completed, or canceled
    string transactionStatus?;
    # The reason for manually reinstating the policy, providing context for the action
    string manualReinstateReason?;
    # A unique identifier for the transaction involving the policy, used for tracking and auditing purposes
    int transactionNumber?;
    # The code representing the type of transaction (e.g., new business, renewal, endorsement) that the policy record is associated with
    string transactionCd?;
    # An external identifier for the policy, used for integration with external systems or databases
    string externalId?;
    # The product code of the company, identifying the specific insurance product offered
    string companyProductCd?;
    AuditPayPlan auditPayPlan?;
    # Indicator of whether commercial package policy coverage is selected
    boolean cPLineSelectedInd?;
    # A policy number from a legacy system, maintained for historical or cross-reference purposes
    string legacyPolicyNumber?;
    # Indicator of whether the billing for the policy is manually split among multiple entities
    boolean manualBillingEntitySplitInd?;
    # The expiration date of the policy, indicating when coverage ends
    string expirationDt?;
    # The type of loss settlement provided by the policy, such as actual cash value or replacement cost
    string lossSettlementType?;
    # A reference identifier for the provider or originator of the policy, such as an agent, broker, or direct application system
    string providerRef?;
    ElectronicPaymentSource electronicPaymentSource?;
    # The code for any promotional offers or discounts applied to the policy, used for marketing and billing purposes
    string promotionCd?;
    # Indicator of whether the policy has been manually reinstated after cancellation or lapse
    boolean manualReinstateInd?;
    # The Standard Industrial Classification (SIC) code associated with the policyholder's primary business activity, used for underwriting and risk assessment
    string sicCode?;
    # Defines the type of insurance policy, such as auto, homeowners, commercial, etc., categorizing the policy for administrative and product-specific purposes
    string policyType?;
    # Indicator of whether the policy is currently on hold due to underwriting review, awaiting additional information or decision
    boolean underwritingHoldInd?;
    # The type of commercial auto policy, detailing specific coverage options selected
    string cAPolicyType?;
    # The date on which the covered property was transferred to an LLC, if applicable
    string llcOwnedDt?;
    # Indicator of whether general liability coverage is selected
    boolean cGLineSelectedInd?;
    # The code identifying the underwriter responsible for the policy, critical for risk management and policy approval processes
    string underwriterCd?;
};

# Represents the Queries record for the operation: getQuotes
public type GetQuotesQueries record {
    # Select applications where application creation date is equal to or greater than the provided createdSinceDate
    string createdSinceDate?;
    # Application or quote number
    string applicationOrQuoteNumber?;
    # Transaction code (e.g. New Business) Use where a specific transactionCd(s) is known. Accepts a comma-separated list of values. Ignored when transactionCdGroup contains a value
    string transactionCd?;
    # Includes deleted applications. If true, results will include "Deleted" applications. If false (or not provided), results will not include "Deleted" applications
    boolean includeDeleted?;
    # Application type. Valid values are Application, QuickQuote, or Quote
    string 'type?;
    # Finds applications recently viewed by the caller/user. If true, results will be restricted to applications recently viewed by the caller/user. If false (or not provided), results will not be restricted to applications recently viewed by the caller/user
    boolean recentlyViewed?;
    # Policy ID
    string policyId?;
    # Provider code number
    string providerId?;
    # Indicates the starting offset for the API results when you want to return a specific portion of the full results. You can use this parameter with the limit parameter. For example, the limit on your first API call was 100 and the results populated a list on the page. To request the next page of 100 results, call the API again with continuationId=101 and limit=100
    string continuationId?;
    # Find applications by transactionCdGroup. Use when a specific transactionCd(s) is not known. Accepts a comma-separated list of values. Valid values are Quote, Cancellation, Renewal, or Other
    string transactionCdGroup?;
    # Customer ID number
    string customerId?;
    # Includes closed applications. If true, results will include "Closed" applications. If false (or not provided), results will not include "Closed" applications
    boolean includeClosed?;
    # The maximum number of results to return
    string 'limit?;
    # Comma-delimited list of optional fields to be included. Currently supports customer and product
    string optionalFields?;
    # Application status (e.g. In Process)
    string status?;
};

# Details the points associated with a driver, typically as a result of traffic violations or incidents. These points can impact insurance premiums and coverage
public type DriverPoint record {
    # The number of points that are chargeable against the driver, directly affecting insurance assessments and premiums
    int pointsChargeable?;
    # Additional remarks or explanations regarding the specific points or the incident leading to the points
    string comments?;
    # The actual number of points charged to the driver after considerations such as mitigating factors or legal adjustments
    int pointsCharged?;
    # The source code identifying where the point data originated from, such as a state DMV or court system, ensuring traceability
    string sourceCd?;
    # The total number of points assigned to the driver as a result of the recorded incident or conviction
    int driverPointsNumber?;
    # Reference to a template used for documenting or processing driver points, facilitating standardized record-keeping
    string templateId?;
    # A code representing the specific infraction or violation that resulted in the points being assigned to the driver
    string infractionCd?;
    # The date on which the infraction occurred, crucial for determining the relevance and impact of the points over time
    string infractionDt?;
    # A unique identifier for the incident as recorded in the direct portal, linking the points to specific events or violations
    string directPortalIncidentId?;
    # The date when the points are set to expire or be removed from the driver's record, following applicable laws or regulations
    string expirationDt?;
    # A categorization code that classifies the type of points or the nature of the infractions, aiding in analysis and reporting
    string typeCd?;
    # The date on which the conviction was registered, leading to points being added to the driver's record
    string convictionDt?;
    # Indicator of whether these points should be ignored or not considered in the driver's risk assessment, possibly due to mitigating circumstances
    boolean ignoreInd = true;
    # A unique identifier for the driver point record, allowing for tracking and management within the system
    string id?;
    # The current status of the points, such as 'Active', 'Expired', or 'Removed', reflecting the driver's current standing
    string status?;
};

# Provides key details about an insurance product, including its identification and descriptive name, facilitating product-specific processing and categorization
public type ProductInfo record {
    # The descriptive name of the product as defined in the Product Master, providing a human-readable identifier that may correspond to marketing or regulatory naming conventions
    string name?;
    # A unique identifier for the insurance product, enabling precise reference and retrieval within the system
    string id?;
};

# A structured response that enumerates all countries supported by the system. This can be used to populate selection lists or validate country data in user inputs
public type ListCountry record {
    # An array of country objects, each representing a country supported by the system. This list includes both the ISO code and the name of each country
    Country[] countries;
};

# Represents the Queries record for the operation: createQuote
public type CreateQuoteQueries record {
    # Starts a quote of the specified type. Valid values are QuickQuote or Quote. If a type is not specified, a QuickQuote will be created if the selected product supports quick quotes and you can perform quick quotes; otherwise, a Quote will be created. If QuickQuote is specified but the selected product does not support quick quotes or you cannot perform quick quotes, then either a 400 or 403 response code will be returned
    string requestedTypeCd?;
};

# Captures comprehensive personal and professional details about a driver, including driving history, license information, and eligibility for various insurance benefits based on driving qualifications and courses completed
public type DriverPersonalInfo record {
    # Reference ID of the vehicle(s) attached to the driver within the policy, establishing a direct association between the driver and specific vehicles
    string attachedVehicleRef?;
    # The start date from which the benefits of completing a defensive driving course take effect, often related to policy discounts
    string defensiveDriverEffectiveDt?;
    # Indicates recognition of the driver as a 'good driver', potentially affecting policy rates and eligibility for specific benefits
    boolean goodDriverInd = true;
    # Signals that the driver qualifies for a good driver discount, based on a history of safe driving and adherence to traffic laws
    boolean goodDriverDiscountInd = true;
    # The date on which the driver qualified for a scholastic achievement discount, typically based on academic performance
    string scholasticCertificationDt?;
    # The total number of years the driver has held a valid driving license, serving as an indicator of experience and proficiency
    string yearsExperience?;
    # The date on which the MVR status was last updated, important for maintaining current and accurate driver records
    string mvrStatusDt?;
    # The date the driver completed a formal training program, which may qualify them for additional benefits or discounts within their insurance policy
    string driverTrainingCompletionDt?;
    # A unique sequence number assigned to the driver, used for identification and tracking within the insurance policy
    int driverNumber?;
    # The effective date when the driver was added to the policy, used for calculating the duration of coverage and experience
    string driverStartDt?;
    # The date on which the driver's license was issued, critical for verifying legal driving status and calculating experience
    string licenseDt?;
    # The current status of the driver, such as 'Occasional' or 'Principal', indicating their primary role or frequency of vehicle use within the policy
    string driverStatusCd?;
    # Indicates that a Motor Vehicle Report (MVR) has been requested for the driver, a critical step in assessing driving history and risk
    boolean mvrRequestInd = true;
    # The expiration date of the defensive driving course benefits, after which renewal may be necessary to maintain associated discounts
    string defensiveDriverExpirationDt?;
    # The year in which the driver was first licensed, offering a measure of driving experience and history
    string yearLicensed?;
    # The official number associated with the driver's license, essential for identity verification and records management
    string licenseNumber?;
    # A unique identifier for the driver's personal information record within the system
    string id?;
    # The date the driver completed an accident prevention course, potentially qualifying them for insurance discounts
    string accidentPreventionCourseCompletionDt?;
    # The status of the MVR data report, providing insights into the driver's history and any potential issues or endorsements
    string mvrStatus?;
    # Indicates whether the driver possesses a permanent driving license, as opposed to a provisional or temporary license
    boolean permanentLicenseInd = true;
    # The total number of vehicles assigned to the driver within the policy, illustrating the extent of the driver's responsibility
    int assignedVehicle?;
    # The total number of years the driver has been actively driving, reflecting experience and potentially influencing risk profiles
    int lengthTimeDriving?;
    # A code that categorizes the driver within the system, often used for internal classification and processing
    string driverInfoCd = "ContactDriver";
    # A flag indicating whether the driver has undergone formal driving training, potentially influencing risk assessments and policy pricing
    boolean driverTrainingInd?;
    # Indicates whether the driver is excluded from certain policy coverages or rating considerations, based on underwriting decisions or policy options
    string excludeDriverInd?;
    # Signals the requirement for the driver to provide proof of insurance to the state or regulatory body, often linked to vehicle registration processes
    boolean requiredProofOfInsuranceInd = true;
    # The code of the state or province that issued the driver's license, indicating the jurisdiction under which the license is valid
    string licensedStateProvCd?;
    # Indicates eligibility for a discount based on scholastic achievement, aimed at student drivers who maintain high academic standards
    boolean scholasticDiscountInd = true;
    # Free-form comments that provide additional context or explanations for the driver's status, changes, or specific conditions noted in the record
    string statusComments?;
    # Current status of the driver's license, such as 'Valid', 'Suspended', or 'Expired', impacting eligibility for insurance
    string licenseStatus?;
    # Designates the driver as a 'mature driver', possibly qualifying for specific discounts based on age and experience
    boolean matureDriverInd = true;
    # Indicates whether the driver has completed an accredited accident prevention course
    boolean accidentPreventionCourseInd = true;
    # Classifies the driver by type, such as 'Excluded' or 'Underaged', affecting policy terms and coverage limits
    string driverTypeCd?;
    # Specifies the driver's relationship to the insured party, such as 'Husband', 'Wife', 'Son', 'Daughter', affecting policy structure and coverages
    string relationshipToInsuredCd?;
    # The date on which the driver was officially hired or employed, relevant in contexts where driving is a professional activity
    string dateofHire?;
    # A detailed record of points accumulated by the driver, reflecting violations, infractions, or other factors that may impact insurance rates or coverage
    DriverPoint[] driverPoints?;
    # Indicates successful completion of a defensive driving course by the driver, which may affect insurance premiums or eligibility for certain coverage options
    boolean defensiveDriverInd = true;
};

# Represents the Queries record for the operation: fillAddressFromGooglePlaces
public type FillAddressFromGooglePlacesQueries record {
    # Place Id from the Google Places search
    string placeId?;
    # The address line to have Google Places search and fill the address components
    string addressLine?;
};

# Provides a structured format for representing state or province information associated with addresses, facilitating consistency and accuracy in address data across various geographic locations
public type AddressStateProvinceTemplates record {
    # A collection of state or province entities, each conforming to the defined StateProvinces schema, allowing for detailed representation of geographic administrative divisions
    StateProvinces[] stateProvinces?;
};

# Defines the details of a transaction within the system
public type TransactionDetails record {
    # User associated with the transaction
    string transactionUser?;
    # Transaction number associated with replacement
    int replacementOfTransactionNumber?;
    # Transaction number associated with un-application
    int unAppliedByTransactionNumber?;
    # Reason for releasing hold
    string releaseHoldReason?;
    # Reference to the conversion job
    string conversionJobRef?;
    # Transaction number associated with replacement
    int replacedByTransactionNumber?;
    # Amount of change in premium for written policy
    string writtenChangePremiumAmt?;
    # Unique identifier for the transaction
    string id?;
    # Number associated with the check
    string checkNumber?;
    # Transaction number associated with reinstatement
    int reinstatementOfTransactionNumber?;
    # Amount of in-force premium
    string inforcePremiumAmt?;
    # Code indicating the type of output
    string outputTypeCd?;
    # Code indicating the type of payment
    string paymentTypeCd?;
    # Reference to renewal provider
    string renewalProviderRef?;
    # Transaction number associated with correction
    int correctionOfTransactionNumber?;
    # Long description of the transaction
    string transactionLongDescription?;
    TransactionCloseReasons transactionCloseReasons?;
    # Total net locations manual premium amount for workers compensation
    string wcTotalNetLocationsManualPremiumAmt?;
    # Version of the product for rewrite
    string rewriteToProductVersion?;
    # Date of the transaction
    string transactionDt?;
    # Amount of payment
    string paymentAmt?;
    # Submission number
    int submissionNumber?;
    # Time of the transaction
    string transactionTm?;
    # Short description of the transaction
    string transactionShortDescription?;
    # Source of un-application
    string unapplySource?;
    # Effective date of the transaction
    string transactionEffectiveDt?;
    # Expiration date of the new policy
    string newPolicyExpirationDt?;
    # Fee amount for written policy
    string writtenFeeAmt?;
    # Code indicating the source of transaction
    string sourceCd?;
    # Effective date of the new policy
    string newPolicyEffectiveDt?;
    # Reference to the conversion template ID
    string conversionTemplateIdRef?;
    # Transaction number associated with renewal application
    int renewalApplyOfTransactionNumber?;
    # Date when the transaction was booked
    string bookDt?;
    # Transaction number associated with the cancellation
    int cancelOfTransactionNumber?;
    # Time when the transaction became effective
    string transactionEffectiveTm?;
    # Premium amount for written policy
    string writtenPremiumAmt?;
    # Transaction number associated with un-application
    int unApplyOfTransactionNumber?;
    # Code indicating the type of cancellation
    string cancelTypeCd?;
    # Type of hold
    string holdType?;
    # Code indicating the sub-producer of renewal
    string renewalSubProducerCd?;
    # Indicates whether a reinstatement fee was charged
    boolean chargeReinstatementFeeInd?;
    # Code indicating the reinstatement of workers compensation
    string wcReinstatementCd?;
    # Reference to the application
    string applicationRef?;
    # Transaction number associated with correction
    int correctedByTransactionNumber?;
    # Transaction number
    int transactionNumber?;
    # Amount of change in premium for in-force policy
    string inforceChangePremiumAmt?;
    # Code indicating the type of transaction
    string transactionCd?;
    # Reasons associated with the transaction
    TransactionReason[] transactionReasons?;
    # Indicates whether cancellation audit for workers compensation is waived
    boolean wcWaiveCancellationAuditInd?;
    # Group associated with conversion
    string conversionGroup?;
    # Transaction number associated with reinstatement
    int reinstatedByTransactionNumber?;
    # Master transaction number
    int masterTransactionNumber?;
    # Text associated with the transaction
    TransactionText[] transactionText?;
    # Code indicating who requested the cancellation
    string cancelRequestedByCd?;
    # Transaction number associated with the cancellation
    int cancelledByTransactionNumber?;
    # Indicates whether invoice is delayed
    boolean delayInvoiceInd?;
};

# Encapsulates comprehensive information about a party involved in the insurance process, including personal, business, and contact details, facilitating holistic management and communication
public type PartyInfo record {
    # A list of addresses associated with the party, detailing physical locations for billing, correspondence, or property coverage
    Address[] addresses?;
    EraseInfo eraseInfo?;
    NameInfo nameInfo?;
    # A code indicating the type of party (e.g., individual, corporation), aiding in classification and process differentiation
    string partyTypeCd?;
    PersonInfo personInfo?;
    BusinessInfo businessInfo?;
    # Reference to a specific location associated with the party, often used for underwriting or claims purposes
    string locationIdRef?;
    TaxInfo taxInfo?;
    DriverInfo driverInfo?;
    ESignatureInfo eSignatureInfo?;
    # The number of years the party has been associated with services or policies within the system, indicating tenure or loyalty
    int yearsOfService?;
    EmailInfo emailInfo?;
    # A collection of phone numbers for the party, covering different types, purposes, and preferences
    PhoneInfo[] phoneInfo?;
    # A unique identifier for the party record within the system, ensuring accurate reference and integration across processes
    string id?;
    QuestionReplies questionReplies?;
    # A reference to an underlying policy associated with the party, establishing connections for coverage, claims, or account management
    string underLyingPolicyIdRef?;
    # A reference to underlying party information, linking related records or entities within the system
    string underLyingPartyInfoIdRef?;
    # The current status of the party within the system, reflecting activity, eligibility, or compliance states
    string status?;
};

# Details a contact entity, capturing essential identification, type, and communication preferences, facilitating targeted and effective interactions
public type Contact record {
    # A code that categorizes the contact by their relationship or role, such as 'Agent', 'Insured', or 'Claimant', aiding in context-specific communication and processes
    string contactTypeCd?;
    PartyInfo partyInfo?;
    # Specifies the contact's preferred method for receiving communications, such as 'Email', 'Paper Mail', or 'SMS', ensuring compliance with their preferences
    string preferredDeliveryMethod?;
    # A unique identifier for the contact within the system, enabling precise reference and management
    string id?;
    # Indicates the current status of the contact within the system, such as 'Active' or 'Inactive', reflecting their availability for communication and transactions
    string status?;
};

# Describes a specific reason contributing to an insurance score, offering explanations for adjustments or factors affecting the score
public type InsuranceScoreReason record {
    # A textual description of the reason, explaining its impact or relevance to the insurance score
    string description?;
    # A unique identifier for the insurance score reason, enabling distinct management and reference
    string id?;
    # A code representing the specific reason affecting the insurance score, used for categorization and analysis
    string reasonCd?;
};

# Encapsulates comprehensive details about a quotation for insurance coverage, including linked resources, policy information, and the status of the quote
public type Quote record {
    # List of additional insured entities for workers' compensation policies, detailing parties other than the primary insured that receive coverage
    WCAdditionalInsured[] wcAdditionalInsureds?;
    # A system-generated version identifier for the quote, used to manage updates and ensure data integrity through optimistic concurrency control
    @jsondata:Name {value: "_revision"}
    string revision?;
    Insured insured?;
    # A reference to the statement account associated with this quote, used for billing and financial transactions related to the policy
    string statementAccountRef?;
    # A collection of hypermedia links to related resources and actions available for the quote, facilitating easy navigation and interaction within the API ecosystem
    @jsondata:Name {value: "_links"}
    Link[] links?;
    # A list of states in which workers' compensation coverage is included within the policy as proposed by this quote, reflecting multi-state operations and compliance
    WCCoveredState[] wcCoveredStates?;
    # A brief description or summary of the quote, providing insights into the coverage scope, purpose, or specific considerations
    string description?;
    # External system data related to the quote, potentially including state-specific requirements, third-party data, or external identifiers
    string externalStateData?;
    # A list of issues or concerns raised by the submitter or system during the quoting process, requiring attention or resolution before proceeding
    SubmitterIssue[] submitterIssues?;
    # A reference identifier linking the quote to a specific policy or policy proposal, establishing a connection between quoting and policy issuance
    string policyRef?;
    TransactionInfo transactionInfo?;
    # An identifier for a system task or process that has locked the quote for exclusive access, preventing concurrent modifications
    string lockTaskId?;
    # Indicates the VIP level or priority of the quote, which may affect processing speed, service levels, or access to special pricing
    string vipLevel?;
    BasicPolicy basicPolicy?;
    # A reference identifier linking the quote to a customer record, enabling correlation between customer details and quotation data
    string customerRef?;
    # The unique identifier for the quote, facilitating tracking, management, and retrieval within the system
    string id?;
    ApplicationInfo applicationInfo?;
    # A list of contacts associated with the quote, including individuals or entities involved in the policy as insureds, beneficiaries, or other roles
    Contact[] contacts?;
    # The current status of the quote, indicating its progression through the quoting process, approval state, or any conditions affecting its validity
    string status?;
};

# Details an additional insured entity or individual on a workers' compensation policy, providing key identification and insurance-related information
public type WCAdditionalInsured record {
    PartyInfo partyInfo?;
    # An array of InsuranceScore objects that provide scoring or rating information related to the additional insured, used in underwriting and risk assessment
    InsuranceScore[] insuranceScore?;
    # A standardized name used for indexing and searching purposes, often formatted to meet specific operational or regulatory requirements
    string indexName?;
    # Indicates the preferred method for delivering communications or documents to the additional insured, aligning with their convenience and regulatory preferences
    string preferredDeliveryMethod?;
    # A collection of references linking the additional insured to related records or external entities, enhancing data connectivity and context
    LinkReference[] linkReference?;
    # A unique identifier for the additional insured record, facilitating distinct management and reference within the system
    string id?;
    # A code indicating the type of entity the additional insured represents, such as 'Additional Named Insured', categorizing their role within the policy context
    string entityTypeCd?;
    # A numerical identifier assigned to the additional insured, useful for tracking and differentiation from other insured entities on the policy
    int insuredNumber?;
    # The current status of the additional insured within the policy, such as 'Active' or 'Inactive', reflecting their involvement and coverage status
    string status?;
};

# Reason associated with a transaction
public type TransactionReason record {
    # Unique identifier for the transaction reason
    string id?;
    # Code indicating the reason for the transaction
    string reasonCd?;
};

# Captures comprehensive details about an individual's or entity's name, accommodating various name formats and types to support a wide range of commercial and personal naming conventions
public type NameInfo record {
    # A code that categorizes the type of name record, such as 'ContactName', indicating the context or application of the name information
    string nameTypeCd = "ContactName";
    # A prefix code indicating titles or honorifics preceding the name, such as 'Mr.', 'Dr.', or 'Ms.', contributing to respectful and accurate address
    string prefixCd?;
    # An extended version of the name that may include additional identifiers or descriptive information, enhancing clarity and specificity
    string extendedName?;
    # A standardized name format used for indexing, typically following conventions to facilitate sorting and retrieval
    string indexName?;
    # The individual's first name or given name, used in personal identification
    string givenName?;
    # Index name under which the business is filed 'Doing Business As' (DBA), facilitating accurate identification and indexing
    string dbaIndexName?;
    # The 'Doing Business As' (DBA) name, representing the trading name under which the business or entity operates publicly, distinct from the legal business name
    string dbaName?;
    # An additional commercial name field, allowing for legal aliases or alternative business names
    string commercialName2?;
    # A suffix code indicating qualifiers or titles following the name, such as 'Jr.', 'Sr.', or academic credentials, adding to the formal identification of the individual
    string suffixCd?;
    # The individual's last name or family name, essential for personal identification and official documentation
    string surname?;
    # A code representing the individual's position or title within an organization, if applicable, contributing to formal identification and correspondence
    string positionCd?;
    # A unique identifier for the name information record, ensuring trackability and distinct management within the system
    string id?;
    # A shortened or informal version of the name, used for ease of communication or in less formal contexts
    string shortName?;
    # An additional or middle given name of the individual, providing completeness to personal identification
    string otherGivenName?;
    # The official commercial name of an entity, used in business contexts and legal documents
    string commercialName?;
};

# Encapsulates both a specific question posed within the system and the corresponding reply, facilitating the structured collection of information for processes such as underwriting or claim assessment
public type QuestionReply record {
    # Indicates whether the question is currently set to be visible to the user, allowing for conditional display based on context or previous answers
    boolean visibleInd = true;
    # A descriptive label or prompt for the question, intended to be displayed as part of the question when presented to the user
    string displayDesc?;
    # The name or key identifying the question, which may be used to map the reply to specific processes or data fields
    string name?;
    # A unique identifier for the question and reply instance, allowing for tracking and referencing within the system
    string id?;
    # The full text of the question as presented to the user, detailing what information or response is being requested
    string text?;
    # The reply or response provided to the question, stored as a string regardless of the original format or type of the input
    string value?;
};

# Outlines detailed information about a document, including its description, associated files, and metadata, supporting comprehensive document management and access
public type DocumentDetail record {
    # The name of the file as stored within the system, including extension, facilitating file identification and access
    string filename?;
    EraseInfo eraseInfo?;
    # A textual summary of the document's content or purpose, aiding in identification and categorization
    string description?;
    # An accompanying memo providing further detail or context about the document, enhancing understanding or guiding action
    string memo?;
    # A collection of files that comprise the document, accommodating multi-part documents or attachments
    CompositeFile[] compositeFile?;
    # A unique identifier for the document, ensuring unambiguous reference across the system
    string id?;
    # Links connecting the document to related entities or records, promoting interconnectedness and contextual awareness
    LinkReference[] linkReferences?;
    # Details the criteria and processes for purging the document from the system, aligning with data governance practices
    record {} purgeInfo?;
    # The identifier of the template utilized for the document, indicating conformity to specific formats or standards
    string templateId?;
    # Tags applied to the document for categorization, searchability, and thematic association
    Tag[] tags?;
};

# Encapsulates metadata in the form of a tag, allowing for the categorization, organization, and easy retrieval of various entities within the system. Tags can be applied to documents, contacts, claims, and more, facilitating efficient data management and searchability
public type Tag record {
    # The human-readable name of the tag, which succinctly describes the attribute, category, or keyword associated with the tag. This name is used for displaying, searching, and organizing entities tagged with this label
    string name?;
    # The reference ID to a predefined tag template from which this tag was created, if applicable. Tag templates facilitate the standardization of tags across the system, ensuring consistency in tagging conventions and metadata application
    string tagTemplateIdRef?;
    # A unique identifier for the tag, ensuring distinctness across the system and enabling precise reference and operations on the tag
    string id?;
};

# Defines the template for constructing and validating addresses within a specific country. This schema includes details like the required fields, address format, and labels for various address components, tailored to the country's postal system
public type AddressCountryTemplate record {
    AddressStateProvinceTemplates addressStateProvinceTemplates?;
    # A regular expression pattern used to validate the format of postal or zip codes for addresses in this country, ensuring data accuracy and compliance with local postal standards
    string postalCodeRegex?;
    # The label used for the city field in address forms, which may vary based on the country's addressing system
    string cityLabel?;
    # The label for the state or province field in address forms, accommodating the terminology used in the country's addressing system
    string stateProvLabel?;
    # A comma-separated list of address fields that are mandatory for this country, allowing for dynamic form validation that adapts to different countries' addressing requirements
    string requiredFields?;
    # Specifies the format used for addresses in this country, including the order of address components and the separators used between them
    string format?;
    # Indicates the number of address lines that are supported or required by the address format of this country
    string addressLines?;
    # The full name of the country to which this address template applies, ensuring clarity and consistency in international addressing
    string countryName?;
    # A unique identifier for the template, typically using the two-letter ISO country code for easy reference
    string id?;
    # The label used for the postal or zip code field, which may be customized based on the country's postal system terminology
    string postalCodeLabel?;
    # Provides examples of valid postal or zip codes for the country, useful as a guide for users when entering address information
    string postalCodeExamples?;
};

# Specifies settings for reapplying output suppression rules to a transaction, indicating whether certain communications or document outputs should be included or suppressed based on specific criteria
public type ReapplyOutputSuppression record {
    # Indicates whether the suppression rule should be included in the current transaction, determining if related outputs are generated
    boolean includeInd?;
    # A unique identifier for the output suppression rule, enabling tracking and management of suppression settings
    string id?;
};

# Encapsulates detailed information regarding an umbrella insurance policy within the Guidewire InsuranceNow system. This schema is designed to capture and organize key identifiers and attributes of an umbrella policy, facilitating effective policy management, identification, and reference across the platform. It serves as a foundational element for operations such as policy lookup, modification, and integration with related insurance processes, ensuring a coherent and unified approach to managing umbrella policies
public type UmbrellaPolicyInfo record {
    # The policy number assigned to the umbrella policy, serving as a human-readable identifier that is often used in documentation and communications
    string policyNumber?;
    # The unique identifier for the umbrella policy, used to uniquely distinguish this policy from others within the system
    string id?;
    # A reference identifier that links this umbrella policy to related records or entities within the system, facilitating cross-referencing and data integrity
    string idRef?;
};

# Represents the Queries record for the operation: getPolicy
public type GetPolicyQueries record {
    # Returns the policy details from a specified date (e.g. 2021-01-01). If not provided, the current date will be used
    string asOfDate?;
};
